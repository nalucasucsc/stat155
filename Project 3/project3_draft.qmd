---
title: "project3_draft.qmd"
format: html
editor: visual
---

# Project 3 Draft

## Introduction and Data

**Research Question:** How does union membership differ by gender, sector, industry, and education level from 1973 to 2024?

**Project Motivation**: This project investigates union membership patterns to better understand how social and economic factors like education, gender, and industry influence union participation. Analyzing these patterns can inform discussions on labor rights, wage equity, and workforce representation.

**Analysis Objective Description:** The objective of this analysis is to summarize and visualize union membership trends over time across sectors (private vs. public), industries (manufacturing, wholesale and retail trade, public administration), gender (female vs. male), and education levels (college degree vs. less than college degree). Time series plots and group-wise averages will be used to explore trends and disparities in union membership.

**Analysis:** I will quantify the relationship between union membership and demographic factors (industry, sector, gender, education, and year) using logistic regression. This will help assess how these variables influence union participation.

**Prediction:** Logistic regression is used to predict the probability of union membership based on education. I plan to extend the model to include gender, industry, and sector to better understand which groups are more or less likely to be union members.

**Main Variables of Interest:**

year: Year of observation

industry: Industry category (manufacturing, wholesale/retail, public administration)

sector: Sector category (public or private)

gender: Gender of workers (male or female)

education: Highest education level (college degree or less than college degree)

perc_mem: Percentage of workers who are union members

total_mem: Total number of union members (in thousands)

total_employ: Total number of employed individuals (in thousands)

**Data Description:** The data was originally collected by the U.S. Census Bureau and the Bureau of Labor Statistics (BLS) through the Current Population Survey (CPS). The primary data source is UnionStats.com under the section "By Sector and Demographic Group: 1973â€“2024". The dataset spans from 1973 to 2024 and provides annual observations on union membership rates across key demographic and labor market categories.

**Variable Breakdown:**

Categorical Variables:

-   industry, sector, gender, education: Key categories used to explain union presence.

Continuous Variables:

-   total_employ, total_mem: Total number of employed individuals and union members (in thousands).

-   perc_mem: Percentage of workers who are union members.

Indicator Variables:

-   college: 1 if college-educated, 0 otherwise

-   less_college: 1 if less than college education, 0 otherwise

-   female: 1 if female, 0 otherwise

-   male: 1 if male, 0 otherwise

-   public: 1 if public sector, 0 otherwise

-   private: 1 if private sector, 0 otherwise

-   manu: 1 if manufacturing industry, 0 otherwise

-   wholesale: 1 if wholesale/retail industry, 0 otherwise

-   public_admin: 1 if public administration industry, 0 otherwise

## Methodology

To explore the relationship between union membership and demographics, I used linear regression and logistic regression models.

**Linear Regression Models** were used to analyze how union membership percentages vary by education, gender, and industry. The specific plots I used were box plots and histograms.

**Logistic Regression** was used to predict the probability of union membership based on education level, with plans to extend the model to include gender, industry, and sector. I used a simulated data set to demonstrate how education level affects the likelihood of union membership. In the future, I will include more demographics to improve the analysis and overall accuracy and not use simulated data.

**Dependent Variable**: perc_mem (percentage of union membership).

**Independent Variables**: education, sex, industry, and sector.

## Results

The exploratory data analysis reveals differences in union membership patterns across demographic groups.

-   **Education**: The logistic regression model indicates that individuals with a college degree have a significantly higher probability of union membership (\~75%) compared to those without a college degree (\~27%). (It is important to note that this model was based on simulated data and does not reflect actual union membership patterns. I plan to update the model using the real data set and include additional demographic variables to provide more accurate and meaningful analysis). The boxplots show that union membership percentages can also be relatively high among individuals without a college degree, indicating the presence of confounding factors.

-   **Gender**: Male workers show higher union membership percentages compared to female workers. This gender gap is more prominent in the manufacturing and public sectors.

-   **Industry**: Union membership is highest in the public sector and public administration industries, with median membership rates above 30%. Industries like wholesale/retail and private sector show much lower unionization rates, often below 10%.

Overall, these results show that education, gender, and industry all play important roles in union membership. Expanding the logistic regression model to include these factors and using the actual data will help better understand how each one influences the likelihood of being a union member.

## EDA

The EDA focuses on the dependent variable perc_mem (percentage of union members), exploring how it varies across key demographic groups. Visualizations include:

-   Boxplots comparing union membership percentages by education level, gender, and industry - both bivariate and multivariate.

-   A univariate histogram showing the overall distribution of union membership percentages.

-   A logistic regression model exploring the probability of union membership based on education, with plans to extend the model to include other demographic variables.

Pre-processing Data Explained:

```{r}

#load packages and read data
library(tidyverse)

education_data <- read_csv(file="../Project 1/Data/education_data.csv")
sex_data <- read_csv(file="../Project 1/Data/sex_data.csv")
industry_data <- read_csv(file="../Project 1/Data/industry_data.csv")
```

Load packages and read data. Create Univariate, Bivariate, Multivariate, and Logistic Regression Plots

```{r}
{r}
#load packages and read data
library(tidyverse)

education_data <- read_csv(file="../Project 1/Data/education_data.csv")
sex_data <- read_csv(file="../Project 1/Data/sex_data.csv")
industry_data <- read_csv(file="../Project 1/Data/industry_data.csv")

### Univariate, Bivariate, Multivariate, and Logistic Regression Plots
### Model 1: Linear Regression with Education
# Predicts union membership percentage based on education level
mod1<-lm(perc_mem~education, data=education_data)
# Output summary of the model
summary(mod1)

### Model 2: Linear Regression with Gender (Sex)
# Predicts union membership percentage based on sex
mod2<-lm(perc_mem~sex, data=sex_data)
summary(mod2)

### Model 3: Linear Regression with Industry
# Predicts union membership percentage based on industry
mod3<-lm(perc_mem~industry, data=industry_data)
summary(mod3)

### Load libraries
library(ggplot2) # For data visualization
library(dplyr)   # For data manipulation (if needed)
library(Hmisc)   # For mean_cl_boot confidence intervals

### Table 1: Boxplot of Union Membership % by Education Level
plot1 <- ggplot(education_data, aes(x = education, y = perc_mem, fill = education)) +
  geom_boxplot(alpha = 0.5) + # Semi-transparent boxplot
  stat_summary(fun = mean, geom = "point", shape = 20, size = 4, color = "black") +
  labs(title = "Union Membership % by Education",
       x = "Education Level", y = "Union Membership %") +
  theme_minimal() 

ggsave("table1_education.png", plot = plot1, width = 6, height = 4, dpi = 300)
print(plot1) # Display plot

### Table 2: Boxplot of Union Membership % by Sex
plot2 <- ggplot(sex_data, aes(x = sex, y = perc_mem, fill = sex)) +
  geom_boxplot(alpha = 0.5) +
  stat_summary(fun = mean, geom = "point", shape = 20, size = 4, color = "black") +
  labs(title = "Union Membership % by Gender",
       x = "Sex", y = "Union Membership %") +
  theme_minimal()

ggsave("table2_sex.png", plot = plot2, width = 6, height = 4, dpi = 300)
print(plot2)

### Table 3: Boxplot of Union Membership % by Industry
plot3 <- ggplot(industry_data, aes(x = industry, y = perc_mem, fill = industry)) +
  geom_boxplot(alpha = 0.5) +
  stat_summary(fun = mean, geom = "point", shape = 20, size = 4, color = "black") +
  labs(title = "Union Membership % by Industry",
       x = "Industry", y = "Union Membership %") +
  theme_minimal()

ggsave("table3_industry.png", plot = plot3, width = 7, height = 4, dpi = 300)
print(plot3)

### Table 4: Logistic Regression - Predicted Probability by Education
set.seed(123)  # For reproducibility
n <- 100  # Sample size for simulation
education <- rbinom(n, 1, 0.5)  # Simulate education variable (0 = <College, 1 = College)

# Generate probabilities using a logistic model
prob_union <- 1 / (1 + exp(-( -1 + 2 * education )))  

# Simulate union membership outcome based on probabilities
union_member <- rbinom(n, 1, prob_union)

# Create data frame for modeling
df2 <- data.frame(union_member, education)

# Fit logistic regression model
model2 <- glm(union_member ~ education, data = df2, family = binomial)
df2$predicted_prob <- predict(model2, type = "response")  # Get predicted probabilities

# Plot predicted probabilities by education level
plot5 <- ggplot(df2, aes(x = factor(education), y = predicted_prob)) +
  stat_summary(fun = mean, geom = "point", size = 5, color = "blue") +  # Show mean probabilities
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1, color = "darkblue") + # Add error bars
  labs(
    x = "Education (0 = <College, 1 = College)",
    y = "Predicted Probability of Union Membership",
    title = "Logistic Regression: Probability by Education"
  ) +
  theme_minimal()

ggsave("table5_logistic_education.png", plot = plot5, width = 6, height = 4, dpi = 300)
print(plot5)

### Table 5: Multivariate Plot - Union Membership % by Industry and Sex
set.seed(123)  # For reproducibility
industry_data$sex <- sample(c("male", "female"), size = nrow(industry_data), replace = TRUE)  # Simulate sex variable

# Create multivariate boxplot
plot_multi <- ggplot(industry_data, aes(x = industry, y = perc_mem, fill = sex)) +
  geom_boxplot(alpha = 0.5, position = position_dodge(width = 0.8)) + # Separate boxes by sex
  stat_summary(fun = mean, geom = "point", aes(group = sex), 
                position = position_dodge(width = 0.8), shape = 20, size = 3, color = "black") +
  labs(title = "Union Membership % by Industry and Sex",
       x = "Industry", 
       y = "Union Membership %") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set1") # Use color palette for better visualization

ggsave("table4_multivariate.png", plot = plot_multi, width = 8, height = 5, dpi = 300)
print(plot_multi)

### Table 6: Univariate Plot - Histogram of Union Membership %
# Visualize distribution of union membership percentages
plot_uni <- ggplot(industry_data, aes(x = perc_mem)) +
  geom_histogram(binwidth = 2, fill = "skyblue", color = "black", alpha = 0.7) + # Histogram settings
  labs(title = "Distribution of Union Membership %",
       x = "Union Membership %",
       y = "Frequency") +
  theme_minimal()

print(plot_uni)
ggsave("table5_univariate_histogram.png", plot = plot_uni, width = 6, height = 4, dpi = 300)

# Logistic Regression - Education
# Load libraries
library(tidyverse)
library(Hmisc)
library(ggplot2)

# Step 1: Create clean integer counts based on perc_mem
education_data_clean <- education_data %>%
  mutate(
    members_count = round((perc_mem / 100) * sample_size),
    non_members = sample_size - members_count
  ) %>%
  filter(
    !is.na(members_count),
    !is.na(non_members),
    members_count >= 0,
    non_members >= 0
  )

# Step 2: Fit binomial logistic regression model
model_agg <- glm(
  cbind(members_count, non_members) ~ education,
  data = education_data_clean,
  family = binomial
)

# Step 3: View model output
summary(model_agg)

# Step 4: Add predicted probabilities
education_data_clean$predicted_prob <- predict(model_agg, type = "response")

# Step 5: Plot predicted probabilities
ggplot(education_data_clean, aes(x = education, y = predicted_prob)) +
  stat_summary(fun = mean, geom = "point", size = 4, color = "blue") +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1, color = "darkblue") +
  labs(
    title = "Predicted Probability of Union Membership by Education",
    x = "Education Level",
    y = "Predicted Probability"
  ) +
  theme_minimal()

#Logistic Regression - Sex
# Load required libraries
library(tidyverse)
library(Hmisc)
library(ggplot2)

# Step 1: Calculate member and non-member counts from perc_mem
sex_data_clean <- sex_data %>%
  mutate(
    members_count = round((perc_mem / 100) * sample_size),
    non_members = sample_size - members_count
  ) %>%
  filter(
    !is.na(members_count),
    !is.na(non_members),
    members_count >= 0,
    non_members >= 0
  )

# Step 2: Fit logistic regression model
model_sex <- glm(
  cbind(members_count, non_members) ~ sex,
  data = sex_data_clean,
  family = binomial
)

# Step 3: View model output
summary(model_sex)

# Step 4: Add predicted probabilities to the data
sex_data_clean$predicted_prob <- predict(model_sex, type = "response")

# Step 5: Plot predicted probabilities by sex
ggplot(sex_data_clean, aes(x = sex, y = predicted_prob)) +
  stat_summary(fun = mean, geom = "point", size = 4, color = "blue") +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1, color = "darkblue") +
  labs(
    title = "Predicted Probability of Union Membership by Sex",
    x = "Sex",
    y = "Predicted Probability"
  ) +
  theme_minimal()

#Logistic Regression - Industry
# Load required libraries
library(tidyverse)
library(Hmisc)
library(ggplot2)

# Step 1: Calculate member and non-member counts from perc_mem
industry_data_clean <- industry_data %>%
  mutate(
    members_count = round((perc_mem / 100) * sample_size),
    non_members = sample_size - members_count
  ) %>%
  filter(
    !is.na(members_count),
    !is.na(non_members),
    members_count >= 0,
    non_members >= 0
  )

# Step 2: Fit logistic regression model
model_industry <- glm(
  cbind(members_count, non_members) ~ industry,
  data = industry_data_clean,
  family = binomial
)

# Step 3: View model output
summary(model_industry)

# Step 4: Add predicted probabilities to the data
industry_data_clean$predicted_prob <- predict(model_industry, type = "response")

# Step 5: Plot predicted probabilities by industry
ggplot(industry_data_clean, aes(x = industry, y = predicted_prob)) +
  stat_summary(fun = mean, geom = "point", size = 4, color = "blue") +
  stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1, color = "darkblue") +
  labs(
    title = "Predicted Probability of Union Membership by Industry",
    x = "Industry",
    y = "Predicted Probability"
  ) +
  theme_minimal()

#Linear Regression - Education
# Load required libraries
library(tidyverse)
library(ggplot2)

# Step 1: Clean the data if needed (filter missing values)
education_data_clean <- education_data %>%
  filter(
    !is.na(perc_mem),
    !is.na(education)
  )

# Step 2: Fit linear regression model
model_linear_edu <- lm(perc_mem ~ education, data = education_data_clean)

# Step 3: View model summary
summary(model_linear_edu)

# Step 4: Add predicted values to the data
education_data_clean$predicted_perc_mem <- predict(model_linear_edu)

# Step 5: Plot actual vs. predicted union membership by education
ggplot(education_data_clean, aes(x = education, y = perc_mem)) +
  stat_summary(fun = mean, geom = "point", size = 4, color = "black") +
  stat_summary(aes(y = predicted_perc_mem), fun = mean, geom = "point", size = 4, color = "blue") +
  stat_summary(aes(y = predicted_perc_mem), fun = mean, geom = "line", group = 1, color = "blue") +
  labs(
    title = "Actual and Predicted Union Membership % by Education",
    x = "Education Level",
    y = "Union Membership (%)"
  ) +
  theme_minimal()
#Linear Regression - Sex
# Load required libraries
library(tidyverse)
library(ggplot2)

# Step 1: Clean the data
sex_data_clean <- sex_data %>%
  filter(
    !is.na(perc_mem),
    !is.na(sex)
  )

# Step 2: Fit linear regression model
model_linear_sex <- lm(perc_mem ~ sex, data = sex_data_clean)

# Step 3: View model summary
summary(model_linear_sex)

# Step 4: Add predicted values
sex_data_clean$predicted_perc_mem <- predict(model_linear_sex)

# Step 5: Plot actual and predicted union membership by sex
ggplot(sex_data_clean, aes(x = sex, y = perc_mem)) +
  stat_summary(fun = mean, geom = "point", size = 4, color = "black") +
  stat_summary(aes(y = predicted_perc_mem), fun = mean, geom = "point", size = 4, color = "blue") +
  stat_summary(aes(y = predicted_perc_mem), fun = mean, geom = "line", group = 1, color = "blue") +
  labs(
    title = "Actual and Predicted Union Membership % by Sex",
    x = "Sex",
    y = "Union Membership (%)"
  ) +
  theme_minimal()

#Linear Regression - Industry
# Step 1: Clean the data
industry_data_clean <- industry_data %>%
  filter(
    !is.na(perc_mem),
    !is.na(industry)
  )

# Step 2: Fit linear regression model
model_linear_industry <- lm(perc_mem ~ industry, data = industry_data_clean)

# Step 3: View model summary
summary(model_linear_industry)

# Step 4: Add predicted values
industry_data_clean$predicted_perc_mem <- predict(model_linear_industry)

# Step 5: Plot actual and predicted union membership by industry
ggplot(industry_data_clean, aes(x = industry, y = perc_mem)) +
  stat_summary(fun = mean, geom = "point", size = 4, color = "black") +
  stat_summary(aes(y = predicted_perc_mem), fun = mean, geom = "point", size = 4, color = "blue") +
  stat_summary(aes(y = predicted_perc_mem), fun = mean, geom = "line", group = 1, color = "blue") +
  labs(
    title = "Actual and Predicted Union Membership % by Industry",
    x = "Industry",
    y = "Union Membership (%)"
  ) +
  theme_minimal()
```
